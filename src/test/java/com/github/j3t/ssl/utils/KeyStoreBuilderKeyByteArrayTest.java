package com.github.j3t.ssl.utils;


import com.github.j3t.ssl.utils.types.KeyUsage;
import org.junit.Before;
import org.junit.Test;

import java.security.KeyStore;
import java.security.cert.Certificate;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

/**
 * Test key store building with key byte array.
 *
 * @author j3t
 */
public class KeyStoreBuilderKeyByteArrayTest {
    private KeyStore keyStore;

    @Before
    public void setUp() throws Exception {
        byte[] key = new byte[]{-2, -19, -2, -19, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 6, 99, 108, 105, 101, 110, 116, 0, 0, 1, 86, 7, 74, -96, -73, 0, 0, 1, -113,
                48, -126, 1, -117, 48, 14, 6, 10, 43, 6, 1, 4, 1, 42, 2, 17, 1, 1, 5, 0, 4, -126, 1, 119, -6, 97, 12, 57, 58, 25, 16, 15, -100, 90, 92, 29, 64,
                -23, 37, 77, -23, -20, -57, -87, -69, 26, 22, 127, -25, 104, 18, -7, -15, -10, -83, 95, 26, -117, 47, 99, 17, 10, 71, -31, -91, -126, -74, 114,
                -35, 124, -22, -23, -56, -97, 119, -45, -17, 57, 61, -108, 95, 92, -64, -96, 115, 8, 119, -122, -114, -55, 20, -93, -76, 118, -14, 110, -12, 84,
                85, 88, 101, -127, 33, 69, 123, -21, -58, 71, 52, -24, 96, -43, 72, -85, -2, -51, -74, 87, -45, -56, -17, 110, -47, -81, 68, 6, 16, 52, 39, 64,
                -55, 84, 117, 43, -33, -102, 89, -70, -66, -96, 49, 59, -30, -103, 93, -20, -12, -20, 13, 87, 127, 20, 40, 98, -98, 46, 68, -94, -121, 59, -64,
                -12, 19, -21, -68, 76, 112, -28, 48, -126, 81, -117, 13, 120, 99, -103, -41, -63, -71, -91, -48, -47, -5, -17, 3, -27, -27, 50, 92, -67, -65,
                -53, 81, 77, 104, -8, 11, 113, 74, -12, 79, 104, 123, 106, 68, -86, 96, 127, 0, 79, 62, 93, -117, -110, 74, -43, 115, 6, -26, -119, 62, -13, 99,
                40, 15, -21, -89, 31, -63, 33, -66, 4, 118, 112, -114, -11, 75, 30, 14, -82, 53, -1, -89, -19, -108, 100, -108, -100, 67, 47, -88, -8, 30, -91,
                -98, 92, -49, 48, -26, 101, 119, 32, -100, 108, 39, 28, -125, 64, 124, -63, 93, 115, 88, 126, 73, 55, 76, 92, -116, -110, -16, -4, -27, 91, -51,
                -117, -110, 37, -95, 35, -1, -23, 66, -63, 38, -47, -33, -56, -103, -2, 36, -94, 10, 45, -37, 109, 55, -23, 71, -119, 105, 98, -57, -126, -88,
                -9, -126, 63, -49, 7, -69, 39, 108, 7, -73, 100, -16, -7, -69, -77, -107, -92, -118, 110, 98, 35, -35, -69, -3, -89, -59, 4, 22, -71, 107, -112,
                -80, -109, 111, -90, 111, 123, 9, 31, -65, -79, 33, -95, -22, -57, -55, 53, -53, -111, 122, 95, -72, -38, -126, -11, -89, 17, -6, 38, 119, -19,
                -15, -124, -120, 61, -44, -27, -47, 67, 7, -34, -10, -104, 99, 9, -101, 26, -109, -40, -5, 3, 32, -99, -8, 0, 0, 0, 1, 0, 5, 88, 46, 53, 48, 57,
                0, 0, 3, 85, 48, -126, 3, 81, 48, -126, 3, 14, -96, 3, 2, 1, 2, 2, 4, 105, 123, -64, -117, 48, 11, 6, 7, 42, -122, 72, -50, 56, 4, 3, 5, 0, 48,
                115, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 68, 69, 49, 21, 48, 19, 6, 3, 85, 4, 8, 19, 12, 76, 111, 119, 101, 114, 32, 83, 97, 120, 111, 110,
                121, 49, 18, 48, 16, 6, 3, 85, 4, 7, 19, 9, 66, 114, 117, 110, 115, 119, 105, 99, 107, 49, 12, 48, 10, 6, 3, 85, 4, 10, 19, 3, 106, 51, 116, 49,
                18, 48, 16, 6, 3, 85, 4, 11, 19, 9, 115, 115, 108, 45, 117, 116, 105, 108, 115, 49, 23, 48, 21, 6, 3, 85, 4, 3, 19, 14, 106, 51, 116, 46, 103,
                105, 116, 104, 117, 98, 46, 99, 111, 109, 48, 30, 23, 13, 49, 54, 48, 55, 50, 48, 48, 55, 53, 50, 50, 53, 90, 23, 13, 49, 57, 48, 55, 48, 53,
                48, 55, 53, 50, 50, 53, 90, 48, 115, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 68, 69, 49, 21, 48, 19, 6, 3, 85, 4, 8, 19, 12, 76, 111, 119, 101,
                114, 32, 83, 97, 120, 111, 110, 121, 49, 18, 48, 16, 6, 3, 85, 4, 7, 19, 9, 66, 114, 117, 110, 115, 119, 105, 99, 107, 49, 12, 48, 10, 6, 3, 85,
                4, 10, 19, 3, 106, 51, 116, 49, 18, 48, 16, 6, 3, 85, 4, 11, 19, 9, 115, 115, 108, 45, 117, 116, 105, 108, 115, 49, 23, 48, 21, 6, 3, 85, 4, 3,
                19, 14, 106, 51, 116, 46, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 48, -126, 1, -72, 48, -126, 1, 44, 6, 7, 42, -122, 72, -50, 56, 4, 1,
                48, -126, 1, 31, 2, -127, -127, 0, -3, 127, 83, -127, 29, 117, 18, 41, 82, -33, 74, -100, 46, -20, -28, -25, -10, 17, -73, 82, 60, -17, 68, 0,
                -61, 30, 63, -128, -74, 81, 38, 105, 69, 93, 64, 34, 81, -5, 89, 61, -115, 88, -6, -65, -59, -11, -70, 48, -10, -53, -101, 85, 108, -41, -127,
                59, -128, 29, 52, 111, -14, 102, 96, -73, 107, -103, 80, -91, -92, -97, -97, -24, 4, 123, 16, 34, -62, 79, -69, -87, -41, -2, -73, -58, 27, -8,
                59, 87, -25, -58, -88, -90, 21, 15, 4, -5, -125, -10, -45, -59, 30, -61, 2, 53, 84, 19, 90, 22, -111, 50, -10, 117, -13, -82, 43, 97, -41, 42,
                -17, -14, 34, 3, 25, -99, -47, 72, 1, -57, 2, 21, 0, -105, 96, 80, -113, 21, 35, 11, -52, -78, -110, -71, -126, -94, -21, -124, 11, -16, 88, 28,
                -11, 2, -127, -127, 0, -9, -31, -96, -123, -42, -101, 61, -34, -53, -68, -85, 92, 54, -72, 87, -71, 121, -108, -81, -69, -6, 58, -22, -126, -7,
                87, 76, 11, 61, 7, -126, 103, 81, 89, 87, -114, -70, -44, 89, 79, -26, 113, 7, 16, -127, -128, -76, 73, 22, 113, 35, -24, 76, 40, 22, 19, -73,
                -49, 9, 50, -116, -56, -90, -31, 60, 22, 122, -117, 84, 124, -115, 40, -32, -93, -82, 30, 43, -77, -90, 117, -111, 110, -93, 127, 11, -6, 33,
                53, 98, -15, -5, 98, 122, 1, 36, 59, -52, -92, -15, -66, -88, 81, -112, -119, -88, -125, -33, -31, 90, -27, -97, 6, -110, -117, 102, 94, -128,
                123, 85, 37, 100, 1, 76, 59, -2, -49, 73, 42, 3, -127, -123, 0, 2, -127, -127, 0, -28, 92, 122, -37, -42, 73, -20, -51, -82, 11, 39, -102, 21,
                -85, 103, -55, 115, -33, -83, 5, 2, -97, -71, 85, -126, 16, 21, 122, -47, -84, -76, 75, -80, -88, -63, 99, -52, 1, -128, 86, 41, -97, 11, 84,
                -22, -25, 6, 88, -4, -7, 118, 79, 34, -93, -55, -21, 12, 71, -8, 98, -84, 81, 66, 103, -78, 4, 108, -97, 125, 102, 47, 80, 34, 80, -80, -74, 72,
                -33, 93, 119, -83, -36, 71, -32, 50, -17, -64, 101, -73, -76, 88, -98, -9, -93, -119, -97, -51, 3, -69, 93, 30, 84, -10, -4, -62, 63, -42, -2,
                -116, -86, -74, 115, -54, 118, -123, -114, 39, -43, -79, -35, 77, 62, 107, 103, 45, -124, 76, -71, -93, 46, 48, 44, 48, 11, 6, 3, 85, 29, 15, 4,
                4, 3, 2, 7, -128, 48, 29, 6, 3, 85, 29, 14, 4, 22, 4, 20, -118, 125, -97, -103, -66, 83, 126, 103, 69, -53, -63, 55, -105, 75, -62, 21, -33,
                -94, -96, 112, 48, 11, 6, 7, 42, -122, 72, -50, 56, 4, 3, 5, 0, 3, 48, 0, 48, 45, 2, 20, 115, -111, 94, -59, -87, -8, 74, -62, 7, -5, -90, 123,
                -42, -55, -45, 14, -114, 14, 6, 124, 2, 21, 0, -107, 105, -19, -92, -115, 45, 108, 16, -83, -15, -106, 47, 59, -4, 108, -25, 91, -126, 98, 74,
                60, -29, 23, 14, 108, 19, 89, -101, 22, 118, -40, 113, -128, -60, 52, -91, -18, 30, -115, 96};

        keyStore = KeyStoreBuilder.create().setKey(key).build();
    }

    @Test
    public void keyStoreShouldContainsClientAlias() throws Exception {
        String[] aliases = KeyStoreHelper.getAliases(keyStore);

        assertEquals(1, aliases.length);
        assertEquals("client", aliases[0]);
    }

    @Test
    public void certificateShouldSupportKeyUsageDigitalSignature() throws Exception {
        Certificate cert = keyStore.getCertificate("client");

        assertEquals(1, CertificateHelper.getKeyUsages(cert).length);
        assertTrue(CertificateHelper.isKeyUsagePresent(cert, KeyUsage.DIGITAL_SIGNATURE));
    }
}
